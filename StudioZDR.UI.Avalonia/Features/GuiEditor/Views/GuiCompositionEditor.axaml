<reactiveUi:ReactiveUserControl
	xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:reactiveUi="http://reactiveui.net"
	xmlns:viewModels="clr-namespace:StudioZDR.App.Features.GuiEditor.ViewModels;assembly=StudioZDR.App"
	xmlns:views="clr-namespace:StudioZDR.UI.Avalonia.Features.GuiEditor.Views"
	xmlns:dataTemplates="clr-namespace:StudioZDR.UI.Avalonia.Features.GuiEditor.DataTemplates"
	xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
	xmlns:fluent="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
	mc:Ignorable="d" d:DesignWidth="1400" d:DesignHeight="700"
	x:TypeArguments="viewModels:GuiEditorViewModel"
	x:DataType="viewModels:GuiEditorViewModel"
	x:CompileBindings="True"
	x:Class="StudioZDR.UI.Avalonia.Features.GuiEditor.Views.GuiCompositionEditor"
	Name="EditorView">

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="6" />
			<ColumnDefinition Width="400" MinWidth="300" />
		</Grid.ColumnDefinitions>

		<Grid RowDefinitions="Auto,*,Auto"
			  ColumnDefinitions="80,*,80">
			<Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
				  ColumnDefinitions="*,Auto"
				  Margin="6">
				<StackPanel Orientation="Horizontal"
							Spacing="6">
					<Button Command="{Binding UndoCommand}"
							ToolTip.Tip="Undo Last Action">
						<i:Icon Value="fa-arrow-rotate-left" />
					</Button>

					<Button Command="{Binding RedoCommand}"
							ToolTip.Tip="Redo Last Undone Action">
						<i:Icon Value="fa-arrow-rotate-right" />
					</Button>
				</StackPanel>

				<StackPanel Grid.Column="1"
							Margin="12,0,0,0"
							Orientation="Horizontal"
							Spacing="6">
					<ToggleButton IsChecked="{Binding IsMouseSelectionEnabled}"
								  ToolTip.Tip="Toggle Mouse Selection">
						<i:Icon Value="fa-arrow-pointer" />
					</ToggleButton>
				</StackPanel>
			</Grid>

			<views:GuiCompositionCanvas Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
										Composition="{Binding Composition}"
										Editor="{Binding}" />

			<Label Grid.Row="2" Grid.Column="0"
				   HorizontalAlignment="Center"
				   VerticalAlignment="Center"
				   Target="ZoomSlider"
				   Content="{Binding ZoomFactor, StringFormat='{}{0:P0}', FallbackValue='100%'}" />

			<Slider Grid.Row="2" Grid.Column="1"
					x:Name="ZoomSlider"
					Value="{Binding ZoomLevel}"
					Minimum="{x:Static views:GuiCompositionCanvas.MinimumZoomLevel}"
					Maximum="{x:Static views:GuiCompositionCanvas.MaximumZoomLevel}" />

			<Button Grid.Row="2" Grid.Column="2"
					HorizontalAlignment="Center"
					Command="{Binding ResetZoomAndPanCommand}"
					ToolTip.Tip="Reset Zoom">
				<i:Icon Value="fa-solid-expand-magnifying-glass" />
			</Button>
		</Grid>

		<GridSplitter Grid.Column="1"
					  ResizeBehavior="PreviousAndNext"
					  ResizeDirection="Columns" />

		<Grid Grid.Column="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition MinHeight="200" />
				<RowDefinition Height="6" />
				<RowDefinition MinHeight="200" />
			</Grid.RowDefinitions>

			<StackPanel Margin="6"
						Orientation="Horizontal"
						Spacing="6">
				<Button Command="{Binding DeleteSelectedObjectsCommand}"
						ToolTip.Tip="Delete Selected">
					<i:Icon Value="fa-trash" />
				</Button>

				<fluent:CommandBarSeparator />

				<Button Click="ExpandAll_OnClick"
						ToolTip.Tip="Expand All">
					<i:Icon Value="fa-chevrons-down" />
				</Button>

				<Button Click="CollapseAll_OnClick"
						ToolTip.Tip="Collapse All">
					<i:Icon Value="fa-chevrons-up" />
				</Button>
			</StackPanel>

			<TreeView x:Name="TreeView" Grid.Row="1"
					  ItemsSource="{Binding Composition.Hierarchy.Children}"
					  SelectedItems="{Binding SelectedNodes}"
					  SelectionMode="Multiple"
					  TreeViewItem.Expanded="TreeView_OnItemExpanded"
					  TreeViewItem.Collapsed="TreeView_OnItemCollapsed"
					  PointerMoved="TreeView_OnPointerMoved"
					  PointerExited="TreeView_OnPointerExited">
				<TreeView.ItemTemplate>
					<TreeDataTemplate ItemsSource="{Binding Children}">
						<!-- Transparent background on Grid allows it to detect pointer events, e.g. for double clicking -->
						<Grid ColumnDefinitions="*,60"
							  Background="Transparent">
							<StackPanel Spacing="4">
								<TextBlock Text="{Binding Name}" />
								<TextBlock Text="{Binding TypeName}"
										   FontSize="10"
										   Foreground="{DynamicResource TextFillColorSecondary}" />
							</StackPanel>

							<Button Grid.Column="1"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Click="ToggleVisible_OnClick">
								<i:Icon Value="{Binding IsVisible, Converter={x:Static views:GuiCompositionEditor.IsVisibleIconConverter}}" />
							</Button>
						</Grid>
					</TreeDataTemplate>
				</TreeView.ItemTemplate>
			</TreeView>

			<GridSplitter Grid.Row="2"
						  ResizeBehavior="PreviousAndNext"
						  ResizeDirection="Rows" />

			<ContentControl Grid.Row="3"
							Content="{Binding SelectedNodes}"
							Margin="4">
				<ContentControl.ContentTemplate>
					<dataTemplates:DisplayObjectPropertiesTemplate
						Editor="{Binding #EditorView.ViewModel}" />
				</ContentControl.ContentTemplate>
			</ContentControl>
		</Grid>
	</Grid>
</reactiveUi:ReactiveUserControl>