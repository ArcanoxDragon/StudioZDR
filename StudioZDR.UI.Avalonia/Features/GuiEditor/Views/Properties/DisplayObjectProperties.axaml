<ContentControl xmlns="https://github.com/avaloniaui"
				xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
				xmlns:converters="clr-namespace:StudioZDR.UI.Avalonia.Converters"
				xmlns:properties="clr-namespace:StudioZDR.App.Features.GuiEditor.ViewModels.Properties;assembly=StudioZDR.App"
				xmlns:c="clr-namespace:StudioZDR.UI.Avalonia.Views.Controls"
				mc:Ignorable="d"
				d:DesignWidth="500" d:DesignHeight="600"
				x:CompileBindings="True"
				x:Class="StudioZDR.UI.Avalonia.Features.GuiEditor.Views.Properties.DisplayObjectProperties"
				Name="Control">

	<Grid
		RowDefinitions="Auto,32,Auto,32,32,32,32,32,32,32"
		Classes="ControlGrid"
		IsEnabled="{Binding #Control.ViewModel.CanEdit}"
		VerticalAlignment="Top">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" SharedSizeGroup="Label" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<TextBlock Grid.ColumnSpan="2" Classes="GroupHeader">
			Common Properties
		</TextBlock>

		<Label Grid.Row="1" Grid.Column="0" Target="IdTextBox">
			ID:
		</Label>

		<TextBox Grid.Row="1" Grid.Column="1"
				 x:Name="IdTextBox"
				 Text="{Binding #Control.ViewModel.Id}"
				 Watermark="{Binding #Control.ViewModel.IdWatermark}" />

		<Label Grid.Row="2" Grid.Column="0"
			   Target="VisibleCheckBox"
			   MinHeight="31">
			Visible:
		</Label>

		<Grid Grid.Row="2" Grid.Column="1"
			  ColumnDefinitions="Auto,*"
			  HorizontalAlignment="Stretch">
			<CheckBox Grid.Column="0"
					  x:Name="VisibleCheckBox"
					  IsChecked="{Binding #Control.ViewModel.IsVisible}" />

			<StackPanel Grid.Column="1">
				<TextBlock Width="NaN"
						   MinWidth="{Binding $parent[StackPanel].Bounds.Width}"
						   MaxWidth="{Binding $parent[StackPanel].Bounds.Width}"
						   Foreground="{DynamicResource TextFillColorTertiary}"
						   FontSize="11"
						   TextWrapping="Wrap">
					This sets whether or not the element is visible in-game by default,
					and is not related to the editor-only visibility toggle available
					in the element tree.
				</TextBlock>
			</StackPanel>
		</Grid>

		<Label Grid.Row="3" Grid.Column="0" Target="HorizontalAnchor">
			X Anchor:
		</Label>

		<StackPanel Grid.Row="3" Grid.Column="1"
					x:Name="HorizontalAnchor"
					Classes="ButtonGroup">
			<c:RadioToggleButton ToolTip.Tip="Left"
								 IsChecked="{
									Binding #Control.ViewModel.HorizontalAnchor, 
									Converter={x:Static converters:EqualsConverter.Instance},
									ConverterParameter={x:Static properties:HorizontalAnchor.Left}}">
				<i:Icon Value="fa-solid fa-objects-align-left" />
			</c:RadioToggleButton>
			<c:RadioToggleButton ToolTip.Tip="Center"
								 IsChecked="{
									Binding #Control.ViewModel.HorizontalAnchor, 
									Converter={x:Static converters:EqualsConverter.Instance},
									ConverterParameter={x:Static properties:HorizontalAnchor.Center}}">
				<i:Icon Value="fa-solid fa-objects-align-center-horizontal" />
			</c:RadioToggleButton>
			<c:RadioToggleButton ToolTip.Tip="Right"
								 IsChecked="{
									Binding #Control.ViewModel.HorizontalAnchor, 
									Converter={x:Static converters:EqualsConverter.Instance},
									ConverterParameter={x:Static properties:HorizontalAnchor.Right}}">
				<i:Icon Value="fa-solid fa-objects-align-right" />
			</c:RadioToggleButton>
		</StackPanel>

		<Label Grid.Row="4" Grid.Column="0" Target="VerticalAnchor">
			Y Anchor:
		</Label>

		<StackPanel Grid.Row="4" Grid.Column="1"
					x:Name="VerticalAnchor"
					Classes="ButtonGroup">
			<c:RadioToggleButton ToolTip.Tip="Top"
								 IsChecked="{
									Binding #Control.ViewModel.VerticalAnchor, 
									Converter={x:Static converters:EqualsConverter.Instance},
									ConverterParameter={x:Static properties:VerticalAnchor.Top}}">
				<i:Icon Value="fa-solid fa-objects-align-top" />
			</c:RadioToggleButton>
			<c:RadioToggleButton ToolTip.Tip="Center"
								 IsChecked="{
									Binding #Control.ViewModel.VerticalAnchor, 
									Converter={x:Static converters:EqualsConverter.Instance},
									ConverterParameter={x:Static properties:VerticalAnchor.Center}}">
				<i:Icon Value="fa-solid fa-objects-align-center-vertical" />
			</c:RadioToggleButton>
			<c:RadioToggleButton ToolTip.Tip="Bottom"
								 IsChecked="{
									Binding #Control.ViewModel.VerticalAnchor, 
									Converter={x:Static converters:EqualsConverter.Instance},
									ConverterParameter={x:Static properties:VerticalAnchor.Bottom}}">
				<i:Icon Value="fa-solid fa-objects-align-bottom" />
			</c:RadioToggleButton>
		</StackPanel>

		<Label Grid.Row="5" Grid.Column="0" Target="PositionXTextBox">
			Position:
		</Label>

		<NumericUpDown Grid.Row="5" Grid.Column="1"
					   x:Name="PositionXTextBox"
					   Value="{Binding #Control.ViewModel.PositionX}"
					   Watermark="{Binding #Control.ViewModel.PositionXWatermark}"
					   Increment="0.01">
			<NumericUpDown.InnerLeftContent>
				<Label Margin="4,0,0,0"
					   Target="PositionXTextBox"
					   VerticalContentAlignment="Center">
					X
				</Label>
			</NumericUpDown.InnerLeftContent>
		</NumericUpDown>

		<NumericUpDown Grid.Row="6" Grid.Column="1"
					   x:Name="PositionYTextBox"
					   Value="{Binding #Control.ViewModel.PositionY}"
					   Watermark="{Binding #Control.ViewModel.PositionYWatermark}"
					   Increment="0.01">
			<NumericUpDown.InnerLeftContent>
				<Label Margin="4,0,0,0"
					   Target="PositionYTextBox"
					   VerticalAlignment="Center">
					Y
				</Label>
			</NumericUpDown.InnerLeftContent>
		</NumericUpDown>

		<Label Grid.Row="7" Grid.Column="0" Target="SizeXTextBox">
			Size:
		</Label>

		<NumericUpDown Grid.Row="7" Grid.Column="1"
					   x:Name="SizeXTextBox"
					   Value="{Binding #Control.ViewModel.SizeX}"
					   Watermark="{Binding #Control.ViewModel.SizeXWatermark}"
					   Increment="0.01">
			<NumericUpDown.InnerLeftContent>
				<Label Margin="4,0,0,0"
					   Target="SizeXTextBox"
					   VerticalContentAlignment="Center">
					X
				</Label>
			</NumericUpDown.InnerLeftContent>
		</NumericUpDown>

		<NumericUpDown Grid.Row="8" Grid.Column="1"
					   x:Name="SizeYTextBox"
					   Value="{Binding #Control.ViewModel.SizeY}"
					   Watermark="{Binding #Control.ViewModel.SizeYWatermark}"
					   Increment="0.01">
			<NumericUpDown.InnerLeftContent>
				<Label Margin="4,0,0,0"
					   Target="SizeYTextBox"
					   VerticalAlignment="Center">
					Y
				</Label>
			</NumericUpDown.InnerLeftContent>
		</NumericUpDown>

		<Label Grid.Row="9" Grid.Column="0" Target="AngleTextBox">
			Angle:
		</Label>

		<NumericUpDown Grid.Row="9" Grid.Column="1"
					   x:Name="AngleTextBox"
					   Value="{Binding #Control.ViewModel.Angle, Converter={x:Static converters:RadiansToDegreesConverter.Instance}}"
					   Watermark="{Binding #Control.ViewModel.AngleWatermark}"
					   Increment="1" />
	</Grid>
</ContentControl>